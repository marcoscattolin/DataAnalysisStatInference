stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.5))
ggplot(data = iris, aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.15))
ggplot(data = iris, aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.15)) +
geom_point(stat="sum")
ggplot(data = iris, aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.15)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
ggplot(data = iris, aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.05)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
ggplot(data = iris[1:10,], aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.05)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
ggplot(data = iris[1:20,], aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.05)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
iris[1:20,]
ggplot(data = iris[1:10,], aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.05)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
ggplot(data = iris[1:15,], aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.05)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
ggplot(data = iris[1:20,], aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.05)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
iris[1:20,]
ggplot(data = iris, aes(x=Sepal.Width,y=Sepal.Length)) +
stat_density2d(aes(col=Species,fill=Species), geom="polygon", alpha=I(0.05)) +
geom_point(aes(col=Species,fill=Species),stat="sum")
install.packages("circlize")
mat = matrix(sample(1:100, 18, replace = TRUE), 3, 6)
chordDiagram(mat)
library(circlize)
chordDiagram(mat)
mat
apply(mat,1,sum)
mat = matrix(sample(1:1000, 18, replace = TRUE), 30, 15)
chordDiagram(mat)
chordDiagram(mat,transparency=0)
mat = matrix(sample(1:1000, 18, replace = TRUE), 3, 5)
mat = matrix(sample(1:100, 18, replace = TRUE), 3, 5)
chordDiagram(mat,transparency=0)
chordDiagram(mat,transparency=c(0,0,0,0))
chordDiagram(mat,transparency=c(1,0,0,0))
chordDiagram(mat,transparency=c(1,1,1,0))
library(ggplot2)
qplot(data = iris, Species)
qplot(data = iris, Species, fill = Species)
qplot(data = iris, Species, fill = Species, col = "black")
qplot(data = iris, Species, fill = Species, col = "Black")
qplot(data = iris, Species, fill = Species, col = "white")
qplot(data = iris, Species, fill = Species, col = "White")
qplot(data = iris, Species, fill = Species, col = black)
qplot(data = iris, Species, fill = Species, col = I("black"))
qplot(data = iris, Species, fill = Species, col = I("black")) + coord_polar()
mapply(1:10,1:10,rep)
mapply(rep,1:10,1:10)
unlist(mapply(rep,1:10,1:10))
tmp <- factor(unlist(mapply(rep,1:10,1:10)))
qplot(data = tmp, tmp, col = I("black")) + coord_polar()
tmp <- data.frame(factor(unlist(mapply(rep,1:10,1:10))))
View(tmp)
tmp <- data.frame(num = factor(unlist(mapply(rep,1:10,1:10))))
qplot(data = tmp, num, col = I("black")) + coord_polar()
qplot(data = tmp, num, fill=num, col = I("black")) + coord_polar()
tmp <- data.frame(num = factor(unlist(mapply(rep,1:100,1:100))))
qplot(data = tmp, num, fill=num, col = I("black")) + coord_polar()
tmp <- data.frame(num = factor(unlist(mapply(rep,1:50,1:50))))
qplot(data = tmp, num, fill=num, col = I("black")) + coord_polar()
qplot(data = tmp, num, fill=num, col = I("black")) + coord_map()
library(ggplot2)
tmp <- data.frame(num = factor(unlist(mapply(rep,1:50,1:50))))
qplot(data = tmp, num, fill=num, col = I("black"))
qplot(data = tmp, num, fill=num, col = I("black")) + coord_polar()
x <- seq(from=-2*pi,to=2*pi,length.out=1000)
y <- sin(x)
qplot(x,y)
qplot(x,y) + coord_polar()
qplot(x,y, col = x) + coord_polar()
qplot(x,y, col = x)
x <- seq(from=-1,to=1,length.out=1000)
x <- seq(from=-1,to=1,length.out=1000)
y <- sqrt(1-x^2)
qplot(x,y, col = x)
qplot(x,y, col = x)+ coord_polar()
x <- seq(from=-1,to=1,length.out=1000)
y <- x
grid <- expand.grid(x,y)
View(grid)
grid$z <- grid$Var1+grid$Var2
qplot(data = grid, Var1, Var2, col = z)
x <- seq(from=-1,to=1,length.out=100)
y <- x
grid <- expand.grid(x,y)
grid$z <- grid$Var1+grid$Var2
qplot(data = grid, Var1, Var2, col = z)
grid$z <- grid$Var1^2+grid$Var2^2
qplot(data = grid, Var1, Var2, col = z)
mat <- matrix(c(50,50,2,2),nrow=2)
mat
assocplot(mat)
mat <- matrix(Male = c(50,50), Female = c(2,2))
mat <- data.frame(Male = c(50,50), Female = c(2,2))
row.names <- c("White","Black")
assocplot(mat)
mat <- data.frame(Sex = c("Male","Male","Female","Female"), Race = ("Black","White","Black","White"), num = c(50,50,2,2))
mat <- data.frame(Sex = c("Male","Male","Female","Female"), Race = ("Black","White","Black","White"), Num = c(50,50,2,2))
mat <- data.frame(Sex = c("Male","Male","Female","Female"), Race = ("Black","White","Black","White"))
mat <- data.frame(sex = c("Male","Male","Female","Female"), race = c("Black","White","Black","White")), Num = c(50,50,2,2))
mat <- data.frame(sex = c("Male","Male","Female","Female"), race = c("Black","White","Black","White"), Num = c(50,50,2,2))
table(mat)
mat <- matrix(c(50,50,2,2),nrow=2)
assocplot(mat)
mat
sum(mat)
4/sum(mat)
mat <- matrix(c(50,50,50,2),nrow=2)
mat <- matrix(c(50,50,50,50),nrow=2)
assocplot(mat)
mat <- matrix(c(50,50,50,2),nrow=2)
assocplot(mat)
mat <- matrix(c(1,1,1,1),nrow=2)
assocplot(mat)
mat <- matrix(c(1,2,1,2),nrow=2)
assocplot(mat)
?assocplot
assocplot
x <- margin.table(HairEyeColor, c(1, 2))
x
assocplot(x)
mosaicplot(x)
mosaicplot(x, shade=T)
chisq.test(x)
fourfoldplot(x)
?fourfoldplot
x <- aperm(UCBAdmissions, c(2, 1, 3))
dimnames(x)[[2]] <- c("Yes", "No")
names(dimnames(x)) <- c("Sex", "Admit?", "Department")
stats::ftable(x)
UCBAdmissions
x <- aperm(UCBAdmissions, c(2, 1, 3))
x
UCBAdmissions
x <- aperm(UCBAdmissions, c(2, 1, 3))
x
dimnames(x)[[2]] <- c("Yes", "No")
names(dimnames(x)) <- c("Sex", "Admit?", "Department")
stats::ftable(x)
fourfoldplot(margin.table(x, c(1, 2)))
89
89+17+202+131+94+24
mosaicplot(x, shade=T)
x <- margin.table(HairEyeColor, c(1, 2))
x
assocplot(x)
mosaicplot(x, shade=T)
mat <- matrix(c(1,2,1,2),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
mat <- matrix(c(51,2,1,2),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
mat <- matrix(c(51,2,1,22),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
mat <- matrix(c(4,2,2,1),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
assocplot(mat)
mosaicplot(mat, shade=T)
mat <- matrix(c(4,22,2,1),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
mat <- matrix(c(4,52,2,1),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
mat <- matrix(c(4,102,2,1),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
mat <- matrix(c(4,102,4,1),nrow=2)
assocplot(mat)
mosaicplot(mat, shade=T)
assocplot(t(mat))
mosaicplot(t(mat), shade=T)
mat
t(mat)
mat <- matrix(c(4,102,4,0),nrow=2)
assocplot(t(mat))
mosaicplot(t(mat), shade=T)
x <- margin.table(HairEyeColor, c(1, 2))
x
assocplot(x)
mosaicplot(x, shade=T)
mosaicplot(x, color=T)
mosaicplot(x, shade=T)
x
x$Eye
HairEyeColor
x <- data.frame(margin.table(HairEyeColor, c(1, 2)))
x
x <- margin.table(HairEyeColor, c(1, 2))
x
mosaicplot(x, shade=T)
mosaicplot(t(x), shade=T)
?mosaicplot
?assocplot
ski
data <- matrix(c(21,3,14,10),nrow="")
data <- matrix(c(21,3,14,10),nrow=2)
data
data <- matrix(c(21,3,14,10),ncol=2)
data
data <- matrix(c(21,3,14,10),ncol=2,byrow=T)
data
colnames(data) <- c("Male","Female")
row.names(data) <- c("Male","Female")
colnames(data) <- c("Promoted","Not Promoted")
data
data.frame(data)
Sex <- c("Male","Female")
Result <- c("Promoted","Not Promoted")
expand.grid(Sex,Result)
data <- data.frame(expand.grid(Sex,Result))
data
colnames(data) <- c("Sex","Result")
data$freq <- c(21,14,3,10)
data <- matrix(c(21,3,14,10),ncol=2,byrow=T)
row.names(data) <- c("Male","Female")
colnames(data) <- c("Promoted","Not Promoted")
mosaicplot(data)
mosaicplot(data,shade=T)
chisq.test(data)
plot(pnorm(-10:10))
plot(qnorm(-10:10))
plot(dnorm(-10:10))
plot(pnorm(-10:10))
?pnorm
qnorm(.5)
qnorm(1)
qnorm(0)
qnorm(.25)
qnorm(.95)
qnorm(.99)
qnorm(.68)
qnorm(.1)
2*qnorm(.1)
dnorm(1800,1500,300)
qnorm(1800,1500,300)
pnorm(1800,1500,300)
qnorm(.1,mean=1500,sd=300)
qnorm(.1,mean=1500,sd=300,lower.tail=F)
qnorm(.9,mean=1500,sd=300)
pnorm(50,45,3.2,lower.tail=F)
qnorm(.2,mean=77,5)
data <- matrix(c(21,3,14,10),ncol=2,byrow=T)
row.names(data) <- c("Male","Female")
colnames(data) <- c("Promoted","Not Promoted")
data <- data.frame(expand.grid(Sex,Result))
colnames(data) <- c("Sex","Result")
data$freq <- c(21,14,3,10)
mosaicplot(data,shade=T)
data <- matrix(c(21,3,14,10),ncol=2,byrow=T)
row.names(data) <- c("Male","Female")
colnames(data) <- c("Promoted","Not Promoted")
data <- data.frame(expand.grid(Sex,Result))
colnames(data) <- c("Sex","Result")
data <- matrix(c(21,3,14,10),ncol=2,byrow=T)
row.names(data) <- c("Male","Female")
colnames(data) <- c("Promoted","Not Promoted")
mosaicplot(data,shade=T)
chisq.test(data)
data
chisq.test(data,p=c(3/24,10/24))
chisq.test(data,p=c(3/24))
chisq.test(data)
(440*962)/1293
rep(0,10)
c(rep(0,10),5,rep(0,4),4,rep(0,20))
a <- c(rep(0,10),5,rep(0,4),4,rep(0,20))
lead(a)
library(dplyr)
lead(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
View(a)
mutate(a, res = lead(exp))
a <- mutate(a, res = ifelse(lead(exp) >0, lead(exp)-1,0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, res = ifelse(lag(exp) >0, lag(exp)-1,0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, exp = exp+ ifelse(lag(exp) >0, lag(exp)-1,0))
View(a)
a <- mutate(a, exp = exp+ ifelse(lag(exp) >0, lag(exp)-1,0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
View(a)
lapply(a,function(x) a:1)
dim(a)
nrow(a)
lapply(1:nrow(a),function(x) a[1]:0)
1:0
0:0
a[1]
lapply(1:nrow(a),function(x) a[x]:0)
seq(1:2)
lapply(1:nrow(a),function(x) seq(a[x]:0))
lapply(1:nrow(a),function(x) seq(a[[x]]:0))
lapply(1:2,function(x) seq(a[[x]]:0))
lapply(1:2,function(x) seq(a[x]:0))
lapply(1:2,function(x) seq(1:0))
a[x]
a[x,1]
lapply(1:2,function(x) seq(a[x,1]:0))
lapply(1:nrow(a),function(x) seq(a[x,1]:0))
lapply(1:nrow(a),function(x) a[x,1]:0)
sapply(1:nrow(a),function(x) a[x,1]:0)
ll <- lapply(1:nrow(a),function(x) a[x,1]:0)
unlist(ll)
m <- unlist(ll)
ll <- lapply(1:nrow(a),function(x) a[x,1]:0)
ll
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
View(a)
mutate(a, res = ifelse(lag(a) > 0, lag(a-1),0))
mutate(a, res = ifelse(lag(exp) > 0, lag(exp-1),0))
?lag
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, exp = ifelse(lag(exp) > 0 & lead(exp) == 0, lag(exp-1),0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & lead(exp) == 0, lag(exp-1),0))
View(a)
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & lead(exp) == 0, lag(exp-1),0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & lead(exp) == 0, lag(exp-1),0))
View(a)
a <- mutate(a, res = exp+ifelse(lag(exp) > 0 & lead(exp) == 0, lag(exp-1),0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, res = exp+ifelse(lag(exp) > 0 & lead(exp) == 0, lag(exp-1),0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, res = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0))
View(a)
a <- mutate(a, res2 = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0))
View(a)
a <- mutate(a, res2 = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
View(a)
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0))
View(a)
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0))
View(a)
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0))
View(a)
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0))
View(a)
a <- mutate(a, exp = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0))
View(a)
a <- data.frame(exp = c(rep(0,10),5,rep(0,4),4,rep(0,20)))
a <- mutate(a, res = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
View(a)
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
View(a)
a <- data.frame(exp = c(rep(0,10),2,rep(0,4),4,rep(0,20)))
a <- data.frame(exp = c(rep(0,10),10,rep(0,4),4,rep(0,20)))
a <- data.frame(exp = c(rep(0,10),10,rep(0,4),4,rep(0,24)))
a <- data.frame(exp = c(rep(0,10),10,rep(0,4),4,rep(0,24)), name = c(rep("marco",30),rep("marta",10)))
a <- group_by(a,name)
a <- mutate(a, res = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
View(a)
a <- data.frame(exp = c(rep(0,10),10,rep(0,4),4,rep(0,24)), name = c(rep("marco",30),rep("marta",10)))
a[28,1] <- 5
a <- group_by(a,name)
View(a)
a <- mutate(a, res = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
View(a)
a <- data.frame(exp = c(rep(0,10),10,rep(0,4),4,rep(0,24)), name = c(rep("marco",30),rep("marta",10)))
a[28,1] <- 5
a <- group_by(a,name)
n <- max(a$exp)
a <- mutate(a, res = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
for i(2:n){
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
for (i in 2:n){
a <- mutate(a, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
print(i)
}
View(a)
car_exp <- data.frame(exp = c(rep(0,10),10,rep(0,4),4,rep(0,24)), emaillogin = c(rep("marco",30),rep("marta",10)))
a[28,1] <- 5
car_exp <- group_by(car_exp,emaillogin)
n <- max(car_exp$exp)
car_exp <- mutate(car_exp, res = exp+ifelse(lag(exp) > 0 & exp == 0, lag(exp-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
for (i in 2:n){
car_exp <- mutate(car_exp, res = res+ifelse(lag(res) > 0 & res == 0, lag(res-1),0)) %>% mutate(res = ifelse(is.na(res),exp,res))
print(i)
}
View(car_exp)
setwd("~/Coursera/DataAnalysisStatInference")
load(url("http://bit.ly/dasi_gss_data"))
gss <- tbl_df(gss)
library(dplyr)
gss <- tbl_df(gss)
gss <- select(gss, degree, tvhours) %>% filter(!is.na(degree) & !is.na(tvhours)) %>% group_by(degree)
load(url("http://bit.ly/dasi_gss_data"))
gss <- tbl_df(gss)
fullresp <- nrow(gss)
gss <- select(gss, degree, tvhours) %>% filter(!is.na(degree) & !is.na(tvhours)) %>% group_by(degree)
nrow(gss)/fullresp
load(url("http://bit.ly/dasi_gss_data"))
table(gss$year,gss$degree,useNA="ifany")
table(gss$year,is.na(gss$degree))
table(is.na(gss$degree),gss$year)
mosaicplot(is.na(gss$degree)~gss$year)
mosaicplot(is.na(gss$degree)~gss$year,shade=T)
mosaicplot(gss$year~is.na(gss$degree)gss$year,shade=T)
mosaicplot(gss$year~is.na(gss$degree),shade=T)
mosaicplot(gss$year~is.na(gss$tvhours),shade=T)
table(gss$tvhours)
gss <- select(gss, degree, tvhours) %>% filter(!is.na(degree) & !is.na(tvhours)) %>% group_by(degree)
fullresp-nrow(gss)
nrow(gss)/fullresp
1-nrow(gss)/fullresp
library(dplyr)
source("http://bit.ly/dasi_inference")
library(dplyr)
load(url("http://bit.ly/dasi_gss_data"))
par(mfrow=c(2,1))
mosaicplot(gss$year~!is.na(gss$degree),  main= "Availability of degree data over survey years", ylab = "Degree data available?", xlab= "Survey year", col = c("red","black"))
gss <- tbl_df(gss)
gss <- select(gss, degree, tvhours) %>% filter(!is.na(degree) & !is.na(tvhours)) %>% group_by(degree)
summarise(gss,num = n(), mean = mean(tvhours),sd = sd(tvhours))
boxplot(gss$tvours~gss$degree)
boxplot(gss$tvhours~gss$degree)
library(dplyr)
load(url("http://bit.ly/dasi_gss_data"))
par(mfrow=c(1,1))
boxplot(gss$tvhours~gss$degree)
boxplot(log(gss$tvhours+1)~gss$degree)
boxplot(log(gss$tvhours)~gss$degree)
boxplot(log(gss$tvhours)~gss$degree)
boxplot(log(gss$tvhours+1)~gss$degree)
boxplot(gss$tvhours~gss$degree)
gss <- tbl_df(gss)
gss <- select(gss, degree, tvhours) %>% filter(!is.na(degree) & !is.na(tvhours)) %>% mutate(log10tvh = log(tvhours + 1)) %>% group_by(degree)
summary <- summarise(gss,num = n(), log10tvh_mean = mean(log10tvh),log10tvh_sd = sd(log10tvh))
summary
View(summary)
pnorm(.975,lower.tail=F)
2*pnorm(.975,lower.tail=F)
qnorm(.975,lower.tail=F)
qnorm(.975,lower.tail=T)
qnorm(.025,lower.tail=T)
gss <- tbl_df(gss)
gss <- select(gss, degree, tvhours) %>% filter(!is.na(degree) & !is.na(tvhours)) %>% mutate(log10tvh = log(tvhours + 1)) %>% group_by(degree)
z <- -qnorm(.025,lower.tail=T)
summary <- summarise(gss,num = n(),
log10tvh_mean = mean(log10tvh),
log10tvh_sd = sd(log10tvh),
lowerbound_ci95 = mean(log10tvh)-z*(sd(log10tvh)/sqrt(n())))
summary
gss <- tbl_df(gss)
gss <- select(gss, degree, tvhours) %>% filter(!is.na(degree) & !is.na(tvhours)) %>% mutate(log10tvh = log(tvhours + 1)) %>% group_by(degree)
z <- -qnorm(.025,lower.tail=T)
summary <- summarise(gss,num = n(),
log10tvh_mean = mean(log10tvh),
log10tvh_sd = sd(log10tvh),
lowerbound_ci95siglevel = mean(log10tvh)-z*(sd(log10tvh)/sqrt(n())),
upperbound_ci95siglevel = mean(log10tvh)+z*(sd(log10tvh)/sqrt(n())),)
summary <- summarise(gss,num = n(),
log10tvh_mean = mean(log10tvh),
log10tvh_sd = sd(log10tvh),
lowerbound_ci95siglevel = mean(log10tvh)-z*(sd(log10tvh)/sqrt(n())),
upperbound_ci95siglevel = mean(log10tvh)+z*(sd(log10tvh)/sqrt(n())))
summary
summary <- summarise(gss,num = n(),
tvh_mean = mean(tvhours),
tvh_sd = sd(tvhours),
lower_ci = mean(tvhours)-z*(sd(tvhours)/sqrt(n())),
upper_ci = mean(tvhours)+z*(sd(tvhours)/sqrt(n())))
library(ggplot2)
summary
qplot(data=summary,degree,tvh_mean)
qplot(data=summary,degree,tvh_mean, col = degree)
limits <- aes(ymax = summary$upper_ci, ymin=summary$lower_ci)
qplot(data=summary,degree,tvh_mean, col = degree) + + geom_errorbar(limits, width=0.2)
qplot(data=summary,degree,tvh_mean, col = degree) + geom_errorbar(limits, width=0.2)
qplot(data=summary,degree,tvh_mean, col = degree) + geom_errorbar(limits)
qplot(data=summary,degree,tvh_mean, col = degree) + geom_errorbar(limits) + theme_bw()
qplot(data=summary,degree,tvh_mean, col = degree, ylab="Means of tv hours and 95% conf.int.") + geom_errorbar(limits) + theme_bw()
qplot(data=summary,degree,tvh_mean, col = degree, main="Means of tv hours and 95% conf.int.") + geom_errorbar(limits) + theme_bw()
qplot(data=summary,degree,tvh_mean, col = degree, main="Means of tv hours and 95% conf.int.", ylab ="tv hours means") + geom_errorbar(limits) + theme_bw()
qplot(data=summary,degree,tvh_mean, col = degree, main="Means of tv hours and 95% conf.int.", ylab ="tv hours means") + geom_errorbar(limits, width = 0.7) + theme_bw()
qplot(data = gss, degree,tvours,geom="boxplot", fill = degree) + theme_bw()
qplot(data = gss, degree,tvhours,geom="boxplot", fill = degree) + theme_bw()
qplot(data = gss, degree,tvhours,geom="boxplot", fill = degree, main="TV hours distribution across groups") + theme_bw()
